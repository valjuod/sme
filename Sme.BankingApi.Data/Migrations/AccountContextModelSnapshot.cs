// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sme.BankingApi.Data;

#nullable disable

namespace Sme.BankingApi.Data.Migrations
{
    [DbContext(typeof(AccountContext))]
    partial class AccountContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sme.BankingApi.Data.Model.AccountModel", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<decimal>("Balance")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<byte>("Currency")
                        .HasColumnType("tinyint");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Number");

                    b.HasIndex("CustomerId");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Number = "LT11000000000000000000000000000001",
                            Balance = 0m,
                            Currency = (byte)0,
                            CustomerId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Number = "LT11000000000000000000000000000002",
                            Balance = 0m,
                            Currency = (byte)1,
                            CustomerId = 1,
                            Status = (byte)0
                        },
                        new
                        {
                            Number = "LT11000000000000000000000000000003",
                            Balance = 0m,
                            Currency = (byte)0,
                            CustomerId = 2,
                            Status = (byte)0
                        },
                        new
                        {
                            Number = "LT11000000000000000000000000000004",
                            Balance = 0m,
                            Currency = (byte)1,
                            CustomerId = 2,
                            Status = (byte)0
                        });
                });

            modelBuilder.Entity("Sme.BankingApi.Data.Model.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsVip")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsVip = false,
                            Title = "Mr simple"
                        },
                        new
                        {
                            Id = 2,
                            IsVip = true,
                            Title = "Mr VIP"
                        });
                });

            modelBuilder.Entity("Sme.BankingApi.Data.Model.TransactionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Balance")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<byte>("Currency")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("Sme.BankingApi.Data.Model.AccountModel", b =>
                {
                    b.HasOne("Sme.BankingApi.Data.Model.CustomerModel", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Sme.BankingApi.Data.Model.TransactionModel", b =>
                {
                    b.HasOne("Sme.BankingApi.Data.Model.AccountModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
